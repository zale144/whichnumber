// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: whichnumber/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryGetGameRequest is the request type for the Query/GetGame RPC method.
type QueryGetGameRequest struct {
	// id defines the id of the game to query for.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryGetGameRequest) Reset()         { *m = QueryGetGameRequest{} }
func (m *QueryGetGameRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetGameRequest) ProtoMessage()    {}
func (*QueryGetGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{0}
}
func (m *QueryGetGameRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetGameRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetGameRequest.Merge(m, src)
}
func (m *QueryGetGameRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetGameRequest proto.InternalMessageInfo

func (m *QueryGetGameRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// QueryGetGameResponse is the response type for the Query/GetGame RPC method.
type QueryGetGameResponse struct {
	Game QueryGameResponse `protobuf:"bytes,1,opt,name=game,proto3" json:"game"`
}

func (m *QueryGetGameResponse) Reset()         { *m = QueryGetGameResponse{} }
func (m *QueryGetGameResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetGameResponse) ProtoMessage()    {}
func (*QueryGetGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{1}
}
func (m *QueryGetGameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetGameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetGameResponse.Merge(m, src)
}
func (m *QueryGetGameResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetGameResponse proto.InternalMessageInfo

func (m *QueryGetGameResponse) GetGame() QueryGameResponse {
	if m != nil {
		return m.Game
	}
	return QueryGameResponse{}
}

// QueryGamesRequest is the request type for the Query/Games RPC method.
type QueryGetGamesRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetGamesRequest) Reset()         { *m = QueryGetGamesRequest{} }
func (m *QueryGetGamesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetGamesRequest) ProtoMessage()    {}
func (*QueryGetGamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{2}
}
func (m *QueryGetGamesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetGamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetGamesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetGamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetGamesRequest.Merge(m, src)
}
func (m *QueryGetGamesRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetGamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetGamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetGamesRequest proto.InternalMessageInfo

func (m *QueryGetGamesRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryGamesResponse is the response type for the Query/Games RPC method.
type QueryGetGamesResponse struct {
	Games      []*QueryGameResponse `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Pagination *query.PageResponse  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGetGamesResponse) Reset()         { *m = QueryGetGamesResponse{} }
func (m *QueryGetGamesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetGamesResponse) ProtoMessage()    {}
func (*QueryGetGamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{3}
}
func (m *QueryGetGamesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetGamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetGamesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetGamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetGamesResponse.Merge(m, src)
}
func (m *QueryGetGamesResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetGamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetGamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetGamesResponse proto.InternalMessageInfo

func (m *QueryGetGamesResponse) GetGames() []*QueryGameResponse {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *QueryGetGamesResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryGetGameResponse is the response type for the Query/GetGame RPC method.
type QueryGameResponse struct {
	Id            int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator       string               `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerCommits []*NumberCommit      `protobuf:"bytes,4,rep,name=player_commits,json=playerCommits,proto3" json:"player_commits,omitempty"`
	PlayerReveals []*QueryPlayerReveal `protobuf:"bytes,5,rep,name=player_reveals,json=playerReveals,proto3" json:"player_reveals,omitempty"`
	Reward        string               `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`
	EntryFee      string               `protobuf:"bytes,7,opt,name=entry_fee,json=entryFee,proto3" json:"entry_fee,omitempty"`
	CommitTimeout time.Time            `protobuf:"bytes,8,opt,name=commit_timeout,json=commitTimeout,proto3,stdtime" json:"commit_timeout"`
	RevealTimeout *time.Time           `protobuf:"bytes,9,opt,name=reveal_timeout,json=revealTimeout,proto3,stdtime" json:"reveal_timeout,omitempty"`
	Status        GameStatus           `protobuf:"varint,10,opt,name=status,proto3,enum=zale144.whichnumber.whichnumber.GameStatus" json:"status,omitempty"`
	Winners       []*Winner            `protobuf:"bytes,11,rep,name=winners,proto3" json:"winners,omitempty"`
}

func (m *QueryGameResponse) Reset()         { *m = QueryGameResponse{} }
func (m *QueryGameResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGameResponse) ProtoMessage()    {}
func (*QueryGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{4}
}
func (m *QueryGameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGameResponse.Merge(m, src)
}
func (m *QueryGameResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGameResponse proto.InternalMessageInfo

func (m *QueryGameResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QueryGameResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *QueryGameResponse) GetPlayerCommits() []*NumberCommit {
	if m != nil {
		return m.PlayerCommits
	}
	return nil
}

func (m *QueryGameResponse) GetPlayerReveals() []*QueryPlayerReveal {
	if m != nil {
		return m.PlayerReveals
	}
	return nil
}

func (m *QueryGameResponse) GetReward() string {
	if m != nil {
		return m.Reward
	}
	return ""
}

func (m *QueryGameResponse) GetEntryFee() string {
	if m != nil {
		return m.EntryFee
	}
	return ""
}

func (m *QueryGameResponse) GetCommitTimeout() time.Time {
	if m != nil {
		return m.CommitTimeout
	}
	return time.Time{}
}

func (m *QueryGameResponse) GetRevealTimeout() *time.Time {
	if m != nil {
		return m.RevealTimeout
	}
	return nil
}

func (m *QueryGameResponse) GetStatus() GameStatus {
	if m != nil {
		return m.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (m *QueryGameResponse) GetWinners() []*Winner {
	if m != nil {
		return m.Winners
	}
	return nil
}

type QueryPlayerReveal struct {
	PlayerAddress string    `protobuf:"bytes,1,opt,name=player_address,json=playerAddress,proto3" json:"player_address,omitempty"`
	Proximity     uint64    `protobuf:"varint,2,opt,name=proximity,proto3" json:"proximity,omitempty"`
	CreatedAt     time.Time `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
}

func (m *QueryPlayerReveal) Reset()         { *m = QueryPlayerReveal{} }
func (m *QueryPlayerReveal) String() string { return proto.CompactTextString(m) }
func (*QueryPlayerReveal) ProtoMessage()    {}
func (*QueryPlayerReveal) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{5}
}
func (m *QueryPlayerReveal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryPlayerReveal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryPlayerReveal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryPlayerReveal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPlayerReveal.Merge(m, src)
}
func (m *QueryPlayerReveal) XXX_Size() int {
	return m.Size()
}
func (m *QueryPlayerReveal) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPlayerReveal.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPlayerReveal proto.InternalMessageInfo

func (m *QueryPlayerReveal) GetPlayerAddress() string {
	if m != nil {
		return m.PlayerAddress
	}
	return ""
}

func (m *QueryPlayerReveal) GetProximity() uint64 {
	if m != nil {
		return m.Proximity
	}
	return 0
}

func (m *QueryPlayerReveal) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

// QueryGetSystemRequest is the request type for the Query/GetSystem RPC method
type QueryGetSystemInfoRequest struct {
}

func (m *QueryGetSystemInfoRequest) Reset()         { *m = QueryGetSystemInfoRequest{} }
func (m *QueryGetSystemInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetSystemInfoRequest) ProtoMessage()    {}
func (*QueryGetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{6}
}
func (m *QueryGetSystemInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetSystemInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetSystemInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetSystemInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetSystemInfoRequest.Merge(m, src)
}
func (m *QueryGetSystemInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetSystemInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetSystemInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetSystemInfoRequest proto.InternalMessageInfo

// QueryGetSystemInfoResponse is the response type for the Query/GetSystemInfo RPC method
type QueryGetSystemInfoResponse struct {
	SystemInfo SystemInfo `protobuf:"bytes,1,opt,name=SystemInfo,proto3" json:"SystemInfo"`
}

func (m *QueryGetSystemInfoResponse) Reset()         { *m = QueryGetSystemInfoResponse{} }
func (m *QueryGetSystemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetSystemInfoResponse) ProtoMessage()    {}
func (*QueryGetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{7}
}
func (m *QueryGetSystemInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetSystemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetSystemInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetSystemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetSystemInfoResponse.Merge(m, src)
}
func (m *QueryGetSystemInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetSystemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetSystemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetSystemInfoResponse proto.InternalMessageInfo

func (m *QueryGetSystemInfoResponse) GetSystemInfo() SystemInfo {
	if m != nil {
		return m.SystemInfo
	}
	return SystemInfo{}
}

// QueryGetParamsRequest is request type for the Query/Params RPC method.
type QueryGetParamsRequest struct {
}

func (m *QueryGetParamsRequest) Reset()         { *m = QueryGetParamsRequest{} }
func (m *QueryGetParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetParamsRequest) ProtoMessage()    {}
func (*QueryGetParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{8}
}
func (m *QueryGetParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetParamsRequest.Merge(m, src)
}
func (m *QueryGetParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetParamsRequest proto.InternalMessageInfo

// QueryGetParamsResponse is response type for the Query/Params RPC method.
type QueryGetParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryGetParamsResponse) Reset()         { *m = QueryGetParamsResponse{} }
func (m *QueryGetParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetParamsResponse) ProtoMessage()    {}
func (*QueryGetParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9d49145e715a6f, []int{9}
}
func (m *QueryGetParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetParamsResponse.Merge(m, src)
}
func (m *QueryGetParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetParamsResponse proto.InternalMessageInfo

func (m *QueryGetParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func init() {
	proto.RegisterType((*QueryGetGameRequest)(nil), "zale144.whichnumber.whichnumber.QueryGetGameRequest")
	proto.RegisterType((*QueryGetGameResponse)(nil), "zale144.whichnumber.whichnumber.QueryGetGameResponse")
	proto.RegisterType((*QueryGetGamesRequest)(nil), "zale144.whichnumber.whichnumber.QueryGetGamesRequest")
	proto.RegisterType((*QueryGetGamesResponse)(nil), "zale144.whichnumber.whichnumber.QueryGetGamesResponse")
	proto.RegisterType((*QueryGameResponse)(nil), "zale144.whichnumber.whichnumber.QueryGameResponse")
	proto.RegisterType((*QueryPlayerReveal)(nil), "zale144.whichnumber.whichnumber.QueryPlayerReveal")
	proto.RegisterType((*QueryGetSystemInfoRequest)(nil), "zale144.whichnumber.whichnumber.QueryGetSystemInfoRequest")
	proto.RegisterType((*QueryGetSystemInfoResponse)(nil), "zale144.whichnumber.whichnumber.QueryGetSystemInfoResponse")
	proto.RegisterType((*QueryGetParamsRequest)(nil), "zale144.whichnumber.whichnumber.QueryGetParamsRequest")
	proto.RegisterType((*QueryGetParamsResponse)(nil), "zale144.whichnumber.whichnumber.QueryGetParamsResponse")
}

func init() { proto.RegisterFile("whichnumber/query.proto", fileDescriptor_3d9d49145e715a6f) }

var fileDescriptor_3d9d49145e715a6f = []byte{
	// 884 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0xd3, 0xfc, 0x7c, 0xab, 0x46, 0x62, 0x58, 0x76, 0x8d, 0xdb, 0x4d, 0x82, 0xd1, 0xd2,
	0x0a, 0x84, 0xad, 0x86, 0x02, 0x12, 0x9c, 0xda, 0x8a, 0x2d, 0x88, 0x15, 0xea, 0x7a, 0x2b, 0x21,
	0x38, 0x10, 0x4d, 0xe2, 0x89, 0x6b, 0x29, 0xf6, 0x78, 0x3d, 0x93, 0xed, 0x06, 0xc4, 0x85, 0xbf,
	0x60, 0x25, 0xce, 0x15, 0x82, 0x23, 0x47, 0xfe, 0x07, 0xa4, 0x1e, 0x2b, 0x71, 0xe1, 0x04, 0xa8,
	0xe5, 0x0f, 0x41, 0x9e, 0x1f, 0x89, 0xd3, 0x06, 0x25, 0xe9, 0xa9, 0x19, 0xbf, 0xf7, 0x7d, 0xef,
	0x7b, 0x6f, 0x3e, 0x3f, 0x17, 0xee, 0x9f, 0x9e, 0x84, 0xfd, 0x93, 0x78, 0x14, 0xf5, 0x48, 0xea,
	0x3e, 0x1b, 0x91, 0x74, 0xec, 0x24, 0x29, 0xe5, 0x14, 0xb5, 0xbe, 0xc5, 0x43, 0xb2, 0xb3, 0xbb,
	0xeb, 0xe4, 0x12, 0xf2, 0xbf, 0xad, 0xbb, 0x01, 0x0d, 0xa8, 0xc8, 0x75, 0xb3, 0x5f, 0x12, 0x66,
	0x6d, 0x06, 0x94, 0x06, 0x43, 0xe2, 0xe2, 0x24, 0x74, 0x71, 0x1c, 0x53, 0x8e, 0x79, 0x48, 0x63,
	0xa6, 0xa2, 0xcd, 0x3e, 0x65, 0x11, 0x65, 0x6e, 0x0f, 0x33, 0xe2, 0x3e, 0xdf, 0xe9, 0x11, 0x8e,
	0x77, 0xdc, 0x3e, 0x0d, 0x63, 0x15, 0x7f, 0x3b, 0x1f, 0x17, 0x6a, 0x26, 0x59, 0x09, 0x0e, 0xc2,
	0x58, 0x90, 0xa9, 0x5c, 0x33, 0xaf, 0x3c, 0xc1, 0x29, 0x8e, 0x74, 0x95, 0x99, 0x9e, 0xf8, 0x38,
	0x21, 0x3a, 0xf0, 0x20, 0x1f, 0x60, 0x63, 0xc6, 0x49, 0xd4, 0x0d, 0xe3, 0x81, 0xd6, 0xde, 0x52,
	0xda, 0xc5, 0xa9, 0x37, 0x1a, 0xb8, 0x3c, 0x8c, 0x08, 0xe3, 0x38, 0x4a, 0x64, 0x82, 0xfd, 0x10,
	0x5e, 0x7d, 0x92, 0x89, 0x3a, 0x24, 0xfc, 0x10, 0x47, 0xc4, 0x23, 0xcf, 0x46, 0x84, 0x71, 0xd4,
	0x80, 0x62, 0xe8, 0x9b, 0x46, 0xdb, 0xd8, 0x5e, 0xf3, 0x8a, 0xa1, 0x6f, 0xfb, 0x70, 0x77, 0x36,
	0x8d, 0x25, 0x34, 0x66, 0x04, 0x3d, 0x86, 0x52, 0x80, 0x23, 0x22, 0x32, 0xef, 0x74, 0x3a, 0xce,
	0x82, 0x09, 0x3b, 0x92, 0x24, 0xc7, 0xb0, 0x5f, 0x3a, 0xff, 0xab, 0x55, 0xf0, 0x04, 0x8b, 0xfd,
	0xcd, 0x6c, 0x15, 0xa6, 0xd5, 0x3c, 0x02, 0x98, 0xce, 0x4a, 0xd5, 0x7a, 0xcb, 0x91, 0x83, 0x75,
	0xb2, 0xc1, 0x3a, 0xf2, 0x9a, 0xd5, 0x60, 0x9d, 0x23, 0x1c, 0xe8, 0x4e, 0xbc, 0x1c, 0xd2, 0xfe,
	0xd5, 0x80, 0xd7, 0xae, 0x15, 0x50, 0x7d, 0x7c, 0x0a, 0xe5, 0x4c, 0x01, 0x33, 0x8d, 0xf6, 0xda,
	0xed, 0x1a, 0xf1, 0x24, 0x01, 0x3a, 0x9c, 0xd1, 0x5a, 0x14, 0x5a, 0xb7, 0x16, 0x6a, 0x55, 0x1c,
	0x79, 0xb1, 0xbf, 0x97, 0xe0, 0x95, 0x1b, 0x55, 0xae, 0x5f, 0x0c, 0x32, 0xa1, 0xda, 0x4f, 0x09,
	0xe6, 0x34, 0x15, 0xb5, 0xea, 0x9e, 0x3e, 0xa2, 0x63, 0x68, 0x24, 0x43, 0x3c, 0x26, 0x69, 0xb7,
	0x4f, 0xa3, 0x28, 0xe4, 0xcc, 0x2c, 0x89, 0xde, 0xde, 0x5d, 0xd8, 0xdb, 0x17, 0xe2, 0xcf, 0x81,
	0x40, 0x79, 0xeb, 0x92, 0x44, 0x9e, 0x18, 0xfa, 0x6a, 0xc2, 0x9a, 0x92, 0xe7, 0x04, 0x0f, 0x99,
	0x59, 0x5e, 0x65, 0x62, 0x47, 0x02, 0xeb, 0x09, 0xa8, 0xa6, 0x96, 0x27, 0x86, 0xee, 0x41, 0x25,
	0x25, 0xa7, 0x38, 0xf5, 0xcd, 0x8a, 0xe8, 0x44, 0x9d, 0xd0, 0x06, 0xd4, 0x49, 0xcc, 0xd3, 0x71,
	0x77, 0x40, 0x88, 0x59, 0x15, 0xa1, 0x9a, 0x78, 0xf0, 0x88, 0x10, 0xf4, 0x39, 0x34, 0x64, 0x7b,
	0xdd, 0xcc, 0xd9, 0x74, 0xc4, 0xcd, 0x9a, 0x18, 0xb9, 0xe5, 0x48, 0xe7, 0x3b, 0xda, 0xf9, 0xce,
	0xb1, 0x76, 0xfe, 0x7e, 0x2d, 0xb3, 0xdc, 0xcb, 0xbf, 0x5b, 0x86, 0xb7, 0x2e, 0xb1, 0xc7, 0x12,
	0x9a, 0x91, 0xc9, 0xae, 0x26, 0x64, 0xf5, 0xa5, 0xc8, 0x0c, 0x49, 0x26, 0xb1, 0x9a, 0xec, 0x00,
	0x2a, 0x8c, 0x63, 0x3e, 0x62, 0x26, 0xb4, 0x8d, 0xed, 0x46, 0xe7, 0x9d, 0x85, 0x13, 0xca, 0x2e,
	0xfa, 0xa9, 0x80, 0x78, 0x0a, 0x8a, 0xf6, 0xa0, 0x7a, 0x1a, 0xc6, 0x31, 0x49, 0x99, 0x79, 0x47,
	0xcc, 0x79, 0x6b, 0x21, 0xcb, 0x97, 0x22, 0xdf, 0xd3, 0x38, 0xfb, 0xcc, 0x50, 0x3e, 0xca, 0xcf,
	0x1e, 0x3d, 0x9c, 0xdc, 0x23, 0xf6, 0xfd, 0x94, 0x30, 0x26, 0x3c, 0x55, 0xd7, 0x77, 0xb2, 0x27,
	0x1f, 0xa2, 0x4d, 0xa8, 0x27, 0x29, 0x7d, 0x11, 0x46, 0x21, 0x1f, 0x0b, 0x83, 0x95, 0xbc, 0xe9,
	0x03, 0x74, 0x00, 0x20, 0xdc, 0x46, 0xfc, 0x2e, 0xe6, 0xe6, 0xda, 0x0a, 0x83, 0xaf, 0x2b, 0xdc,
	0x1e, 0xb7, 0x37, 0xe0, 0x75, 0xfd, 0x4e, 0x3e, 0x15, 0xfb, 0xeb, 0xb3, 0x78, 0x40, 0xd5, 0xdb,
	0x6b, 0x53, 0xb0, 0xe6, 0x05, 0xd5, 0xcb, 0xf0, 0x04, 0x60, 0xfa, 0x54, 0xed, 0x85, 0xc5, 0x63,
	0x9e, 0x42, 0xd4, 0xf2, 0xc9, 0x91, 0xd8, 0xf7, 0xa7, 0x1b, 0xe2, 0x48, 0x2c, 0x60, 0xad, 0xa4,
	0x0b, 0xf7, 0xae, 0x07, 0x94, 0x8a, 0x4f, 0xa0, 0x22, 0x77, 0xb5, 0x52, 0xb0, 0xf8, 0x8a, 0x24,
	0x81, 0xaa, 0xae, 0xc0, 0x9d, 0x5f, 0xca, 0x50, 0x16, 0x15, 0xd0, 0x4f, 0x06, 0x54, 0xd5, 0x86,
	0x42, 0xbb, 0x4b, 0x6e, 0xa2, 0x99, 0xf5, 0x6d, 0xbd, 0xbf, 0x22, 0x4a, 0x76, 0x62, 0x6f, 0xfd,
	0xf0, 0xc7, 0xbf, 0x3f, 0x16, 0xdf, 0x40, 0x2d, 0x57, 0xc1, 0xdd, 0xfc, 0xd7, 0x45, 0xec, 0x37,
	0xf7, 0xbb, 0xd0, 0xff, 0x1e, 0x9d, 0x19, 0x50, 0xd3, 0x3b, 0x14, 0xad, 0x56, 0x4c, 0x0f, 0xd4,
	0xfa, 0x60, 0x55, 0x98, 0x12, 0x69, 0x0b, 0x91, 0x9b, 0xc8, 0xfa, 0x7f, 0x91, 0xe8, 0x37, 0x03,
	0xd6, 0x67, 0x2c, 0x83, 0x3e, 0x5a, 0xba, 0xda, 0x0d, 0x13, 0x5a, 0x1f, 0xdf, 0x0a, 0xab, 0xe4,
	0x6e, 0x0b, 0xb9, 0x36, 0x6a, 0xcf, 0x95, 0x9b, 0xfb, 0x62, 0xa3, 0x9f, 0x0d, 0xa8, 0x4f, 0xdc,
	0x85, 0x96, 0x1f, 0xcf, 0x8c, 0x4f, 0xad, 0x0f, 0x57, 0xc6, 0x29, 0xa1, 0x6f, 0x0a, 0xa1, 0x0f,
	0xd0, 0xc6, 0x5c, 0xa1, 0xd2, 0xa4, 0xfb, 0x8f, 0xcf, 0x2f, 0x9b, 0xc6, 0xc5, 0x65, 0xd3, 0xf8,
	0xe7, 0xb2, 0x69, 0xbc, 0xbc, 0x6a, 0x16, 0x2e, 0xae, 0x9a, 0x85, 0x3f, 0xaf, 0x9a, 0x85, 0xaf,
	0x3b, 0x41, 0xc8, 0x4f, 0x46, 0x3d, 0xa7, 0x4f, 0xa3, 0xb9, 0x04, 0x2f, 0xdc, 0x1b, 0xff, 0xc2,
	0xf4, 0x2a, 0x62, 0x47, 0xbc, 0xf7, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x30, 0x22, 0x60,
	0xb2, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	GetGame(ctx context.Context, in *QueryGetGameRequest, opts ...grpc.CallOption) (*QueryGetGameResponse, error)
	GetGames(ctx context.Context, in *QueryGetGamesRequest, opts ...grpc.CallOption) (*QueryGetGamesResponse, error)
	GetSystemInfo(ctx context.Context, in *QueryGetSystemInfoRequest, opts ...grpc.CallOption) (*QueryGetSystemInfoResponse, error)
	// Parameters queries the parameters of the module.
	GetParams(ctx context.Context, in *QueryGetParamsRequest, opts ...grpc.CallOption) (*QueryGetParamsResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) GetGame(ctx context.Context, in *QueryGetGameRequest, opts ...grpc.CallOption) (*QueryGetGameResponse, error) {
	out := new(QueryGetGameResponse)
	err := c.cc.Invoke(ctx, "/zale144.whichnumber.whichnumber.Query/GetGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetGames(ctx context.Context, in *QueryGetGamesRequest, opts ...grpc.CallOption) (*QueryGetGamesResponse, error) {
	out := new(QueryGetGamesResponse)
	err := c.cc.Invoke(ctx, "/zale144.whichnumber.whichnumber.Query/GetGames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetSystemInfo(ctx context.Context, in *QueryGetSystemInfoRequest, opts ...grpc.CallOption) (*QueryGetSystemInfoResponse, error) {
	out := new(QueryGetSystemInfoResponse)
	err := c.cc.Invoke(ctx, "/zale144.whichnumber.whichnumber.Query/GetSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetParams(ctx context.Context, in *QueryGetParamsRequest, opts ...grpc.CallOption) (*QueryGetParamsResponse, error) {
	out := new(QueryGetParamsResponse)
	err := c.cc.Invoke(ctx, "/zale144.whichnumber.whichnumber.Query/GetParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	GetGame(context.Context, *QueryGetGameRequest) (*QueryGetGameResponse, error)
	GetGames(context.Context, *QueryGetGamesRequest) (*QueryGetGamesResponse, error)
	GetSystemInfo(context.Context, *QueryGetSystemInfoRequest) (*QueryGetSystemInfoResponse, error)
	// Parameters queries the parameters of the module.
	GetParams(context.Context, *QueryGetParamsRequest) (*QueryGetParamsResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) GetGame(ctx context.Context, req *QueryGetGameRequest) (*QueryGetGameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGame not implemented")
}
func (*UnimplementedQueryServer) GetGames(ctx context.Context, req *QueryGetGamesRequest) (*QueryGetGamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGames not implemented")
}
func (*UnimplementedQueryServer) GetSystemInfo(ctx context.Context, req *QueryGetSystemInfoRequest) (*QueryGetSystemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemInfo not implemented")
}
func (*UnimplementedQueryServer) GetParams(ctx context.Context, req *QueryGetParamsRequest) (*QueryGetParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParams not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_GetGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zale144.whichnumber.whichnumber.Query/GetGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetGame(ctx, req.(*QueryGetGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetGames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetGamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetGames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zale144.whichnumber.whichnumber.Query/GetGames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetGames(ctx, req.(*QueryGetGamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetSystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zale144.whichnumber.whichnumber.Query/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetSystemInfo(ctx, req.(*QueryGetSystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zale144.whichnumber.whichnumber.Query/GetParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetParams(ctx, req.(*QueryGetParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zale144.whichnumber.whichnumber.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGame",
			Handler:    _Query_GetGame_Handler,
		},
		{
			MethodName: "GetGames",
			Handler:    _Query_GetGames_Handler,
		},
		{
			MethodName: "GetSystemInfo",
			Handler:    _Query_GetSystemInfo_Handler,
		},
		{
			MethodName: "GetParams",
			Handler:    _Query_GetParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "whichnumber/query.proto",
}

func (m *QueryGetGameRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetGameRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetGameRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetGameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetGameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetGameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Game.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetGamesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetGamesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetGamesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetGamesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetGamesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetGamesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Games) > 0 {
		for iNdEx := len(m.Games) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Games[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Winners) > 0 {
		for iNdEx := len(m.Winners) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Winners[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	if m.Status != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x50
	}
	if m.RevealTimeout != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.RevealTimeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.RevealTimeout):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintQuery(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x4a
	}
	n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CommitTimeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CommitTimeout):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintQuery(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0x42
	if len(m.EntryFee) > 0 {
		i -= len(m.EntryFee)
		copy(dAtA[i:], m.EntryFee)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.EntryFee)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Reward) > 0 {
		i -= len(m.Reward)
		copy(dAtA[i:], m.Reward)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Reward)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PlayerReveals) > 0 {
		for iNdEx := len(m.PlayerReveals) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PlayerReveals[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.PlayerCommits) > 0 {
		for iNdEx := len(m.PlayerCommits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PlayerCommits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryPlayerReveal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryPlayerReveal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryPlayerReveal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err6 != nil {
		return 0, err6
	}
	i -= n6
	i = encodeVarintQuery(dAtA, i, uint64(n6))
	i--
	dAtA[i] = 0x1a
	if m.Proximity != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Proximity))
		i--
		dAtA[i] = 0x10
	}
	if len(m.PlayerAddress) > 0 {
		i -= len(m.PlayerAddress)
		copy(dAtA[i:], m.PlayerAddress)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.PlayerAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetSystemInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetSystemInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetSystemInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryGetSystemInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetSystemInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetSystemInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.SystemInfo.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryGetParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryGetGameRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryGetGameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Game.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetGamesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetGamesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Games) > 0 {
		for _, e := range m.Games {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.PlayerCommits) > 0 {
		for _, e := range m.PlayerCommits {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.PlayerReveals) > 0 {
		for _, e := range m.PlayerReveals {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	l = len(m.Reward)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.EntryFee)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CommitTimeout)
	n += 1 + l + sovQuery(uint64(l))
	if m.RevealTimeout != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.RevealTimeout)
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovQuery(uint64(m.Status))
	}
	if len(m.Winners) > 0 {
		for _, e := range m.Winners {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func (m *QueryPlayerReveal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PlayerAddress)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Proximity != 0 {
		n += 1 + sovQuery(uint64(m.Proximity))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetSystemInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryGetSystemInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SystemInfo.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryGetParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryGetGameRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetGameRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetGameRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetGameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetGameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetGameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Game", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Game.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetGamesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetGamesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetGamesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetGamesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetGamesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetGamesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Games", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Games = append(m.Games, &QueryGameResponse{})
			if err := m.Games[len(m.Games)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerCommits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerCommits = append(m.PlayerCommits, &NumberCommit{})
			if err := m.PlayerCommits[len(m.PlayerCommits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerReveals", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerReveals = append(m.PlayerReveals, &QueryPlayerReveal{})
			if err := m.PlayerReveals[len(m.PlayerReveals)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitTimeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CommitTimeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevealTimeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RevealTimeout == nil {
				m.RevealTimeout = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.RevealTimeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= GameStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Winners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Winners = append(m.Winners, &Winner{})
			if err := m.Winners[len(m.Winners)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryPlayerReveal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryPlayerReveal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryPlayerReveal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proximity", wireType)
			}
			m.Proximity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Proximity |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetSystemInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetSystemInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetSystemInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetSystemInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetSystemInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetSystemInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SystemInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
